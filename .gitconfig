[user]
	name = Denis Tuzhik
	email = dentuzhik@gmail.com

[core]
	editor = nvim
	whitespace = -l
	autocrlf = input
	excludesfile = ~/.gitignore
	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false
	commentChar = %

[credential]
	helper = cache --timeout=28800

[color]
	ui = true
    diff = true
    branch = true
    status = true
    pager = true
	interactive = true

[interactive]
	singlekey = true

[help]
	autocorrect = 1

[apply]
	whitespace = fix

[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less

[diff]
	tool = vimdiff
	noprefix = true
	compactionHeuristic = true

[merge]
	log = true
	tool = vimdiff

[push]
	default = current

[rebase]
	autostash = true

[stash]
	showPatch = true

[alias]
	cf = config
	l = log --oneline --graph --decorate
	lp = log -p --relative-date
	ll = !git lp -1
	a = add
	aa = add -A
	rs = reset
	rss = reset --soft
	rsh = reset --hard
	cln = clean -fdx
	pu = push
	puf = push -f
	pus = !sh -c 'git push origin -u ${1-"$(git rev-parse --abbrev-ref HEAD)"}'
	# Short format with branch info
	s = status -sb
	st = status
	di = diff --color
	dc = diff --color --cached
	co = checkout
	cb = checkout -b
	ci = commit
	cim = commit -m
	# Add everything, then commit
	cia = "!f() { git add -A; if [ -z \"$1\" ]; then git commit; else git commit -m \"$1\"; fi }; f"
	ca = commit --amend
	caa = "!f() { git add -A; git commit --amend; }; f"
	cah = "!f() { git add -A; git commit --amend -C 'HEAD'; }; f"
	# Ammend commit author, with useful defaults
	cau = "!f() { git commit --amend --author \"${1-`git config user.name`} <${2-`git config user.email`}>\" -C HEAD; }; f"
	br = branch
	brs = branch -a
	sut = branch --set-upstream-to
	sup = !sh -c 'git branch --set-upstream-to origin/${1-"$(git rev-parse --abbrev-ref HEAD)"}'
	tgs = tag -l
	rv = remote -v
	rb = rebase
	rbi = "!r() { git rebase -i HEAD~${1-5}; }; r"
	# Add all, then rebase continue
	arc = !git add -A && git rebase --continue
	team = shortlog --summary --numbered
	show-merge = "!f() { git show $(git rev-list $1...HEAD --merges --topo-order | tail -1); }; f"

# URL shorthands
[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"
	pushInsteadOf = "https://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gitlab.com:"]
	insteadOf = "gl:"
	pushInsteadOf = "gitlab:"
	pushInsteadOf = "git://gitlab.com/"
	pushInsteadOf = "https://gitlab.com/"

[url "git://gitlab.com/"]
	insteadOf = "gitlab:"

[filter "lfs"]
	required = true
    clean = git-lfs clean %f
    smudge = git-lfs smudge --skip %f

[lfs]
	batch = true
	concurrenttransfers = 15
[hub]
	protocol = ssh
[github]
	user = dentuzhik
[ghi]
	token = !security find-internet-password -a dentuzhik -s github.com -l 'ghi token' -w
